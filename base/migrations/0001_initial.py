# Generated by Django 4.1.7 on 2023-05-02 17:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ADAUGDB', '0001_initial'),
        ('BTco_ordinator', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BTMStudentGradePoints',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegNo', models.IntegerField()),
                ('sub_id', models.IntegerField()),
                ('SubCode', models.CharField(max_length=10)),
                ('SubName', models.CharField(max_length=100)),
                ('CourseStructure_id', models.IntegerField()),
                ('AYear', models.IntegerField()),
                ('ASem', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('OfferedYear', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Grade', models.CharField(max_length=2)),
                ('AttGrade', models.CharField(max_length=2)),
                ('Regulation', models.FloatField()),
                ('Creditable', models.IntegerField()),
                ('Credits', models.IntegerField()),
                ('Course_Credits', models.IntegerField()),
                ('Type', models.CharField(max_length=10)),
                ('Category', models.CharField(max_length=10)),
                ('Points', models.IntegerField()),
                ('GP', models.IntegerField()),
                ('AYASBYBS', models.IntegerField()),
                ('GradePoints', models.FloatField(default=0.0)),
            ],
            options={
                'db_table': 'BTMStudentGradePointsMV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BTMSubjectInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AYear', models.IntegerField()),
                ('ASem', models.IntegerField()),
                ('BYear', models.IntegerField()),
                ('BSem', models.IntegerField()),
                ('Regulation', models.FloatField()),
                ('Mode', models.CharField(max_length=1)),
                ('Dept', models.IntegerField()),
                ('SubId', models.IntegerField()),
                ('SubCode', models.CharField(max_length=10)),
                ('SubName', models.CharField(max_length=100)),
                ('Credits', models.IntegerField()),
                ('OfferedBy', models.IntegerField()),
                ('Type', models.CharField(max_length=10)),
                ('Category', models.CharField(max_length=10)),
                ('DistributionRatio', models.TextField()),
                ('Distribution', models.TextField()),
                ('DistributionNames', models.TextField()),
                ('PromoteThreshold', models.TextField()),
            ],
            options={
                'db_table': 'BTMSubjectInfoV',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BTMCourses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SubCode', models.CharField(max_length=10)),
                ('SubName', models.CharField(max_length=255)),
                ('Credits', models.IntegerField()),
                ('OfferedBy', models.IntegerField()),
                ('lectures', models.IntegerField()),
                ('tutorials', models.IntegerField()),
                ('practicals', models.IntegerField()),
                ('DistributionRatio', models.TextField()),
            ],
            options={
                'db_table': 'BTMCourses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BTMCourseStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Byear', models.IntegerField()),
                ('Bsem', models.IntegerField()),
                ('Dept', models.IntegerField()),
                ('Regulation', models.FloatField()),
                ('Category', models.CharField(max_length=10)),
                ('Type', models.CharField(max_length=10)),
                ('Creditable', models.IntegerField()),
                ('Credits', models.IntegerField()),
                ('count', models.IntegerField()),
                ('Rigid', models.BooleanField()),
            ],
            options={
                'db_table': 'BTMCourseStructure',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BTMSubjects',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegEventId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ADAUGDB.btregistrationstatus')),
                ('course', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='base.btmcourses')),
            ],
            options={
                'db_table': 'BTMSubjects',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BTMStudentRegistrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Mode', models.IntegerField()),
                ('RegEventId', models.ForeignKey(db_column='RegEventId', on_delete=django.db.models.deletion.CASCADE, to='ADAUGDB.btregistrationstatus')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BTco_ordinator.btrolllists')),
                ('sub_id', models.ForeignKey(db_column='sub_id', on_delete=django.db.models.deletion.CASCADE, to='base.btmsubjects')),
            ],
            options={
                'db_table': 'BTMStudentRegistrations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BTMStudentGrades',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RegEventId', models.IntegerField()),
                ('Regulation', models.FloatField()),
                ('Grade', models.CharField(max_length=2)),
                ('AttGrade', models.CharField(max_length=2)),
                ('RegId', models.ForeignKey(db_column='RegId', on_delete=django.db.models.deletion.CASCADE, to='base.btmstudentregistrations')),
            ],
            options={
                'db_table': 'BTMStudentGrades',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='BTMMarksDistribution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Regulation', models.FloatField()),
                ('Distribution', models.TextField()),
                ('DistributionNames', models.TextField()),
                ('PromoteThreshold', models.TextField()),
                ('Thresholds', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'BTMMarksDistribution',
                'managed': True,
                'unique_together': {('Regulation', 'Distribution', 'DistributionNames', 'PromoteThreshold')},
            },
        ),
        migrations.CreateModel(
            name='BTMMarks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Marks', models.TextField()),
                ('TotalMarks', models.IntegerField()),
                ('Registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.btmstudentregistrations')),
            ],
            options={
                'db_table': 'BTMMarks',
                'managed': True,
            },
        ),
        migrations.AddConstraint(
            model_name='btmcoursestructure',
            constraint=models.UniqueConstraint(fields=('Category', 'Type', 'Creditable', 'Credits', 'Regulation', 'Byear', 'Bsem', 'Dept'), name='Unique_BTMCourseStructureID'),
        ),
        migrations.AddField(
            model_name='btmcourses',
            name='CourseStructure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.btmcoursestructure'),
        ),
        migrations.AddField(
            model_name='btmcourses',
            name='MarkDistribution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.btmmarksdistribution'),
        ),
        migrations.AlterUniqueTogether(
            name='btmsubjects',
            unique_together={('course', 'RegEventId')},
        ),
        migrations.AlterUniqueTogether(
            name='btmstudentregistrations',
            unique_together={('student', 'RegEventId', 'sub_id')},
        ),
        migrations.AddConstraint(
            model_name='btmstudentgrades',
            constraint=models.UniqueConstraint(fields=('RegId',), name='unique BTMStudentGrades_registration'),
        ),
        migrations.AddConstraint(
            model_name='btmmarks',
            constraint=models.UniqueConstraint(fields=('Registration',), name='unique BTMmarks registration'),
        ),
        migrations.AddConstraint(
            model_name='btmcourses',
            constraint=models.UniqueConstraint(fields=('SubCode', 'SubName', 'CourseStructure', 'DistributionRatio', 'MarkDistribution'), name='BTMCourses_unique_course'),
        ),
    ]
